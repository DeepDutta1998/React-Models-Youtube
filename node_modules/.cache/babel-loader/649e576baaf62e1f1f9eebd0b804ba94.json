{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deepd\\\\Desktop\\\\myproject\\\\myproject\\\\src\\\\useeffectHooks\\\\Arrayusestate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Arrayusestate() {\n  _s();\n\n  const biodata = [{\n    id: 0,\n    name: '',\n    age: '25'\n  }, {\n    id: 1,\n    name: '',\n    age: '30'\n  }, {\n    id: 2,\n    name: '',\n    age: '24'\n  }]; //console.log(biodata);\n\n  const [myarrayData, setData] = useState(biodata);\n\n  const clearArray = () => {\n    setData([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How to work with Array using UseState Hook in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), myarrayData.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"hi\",\n        children: [\"age:\", data.age, \" and  Name:\", data.name, \" \"]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: clearArray,\n      children: \"Clear Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Arrayusestate, \"/w/qtY+Bwt/FcodMIcmRn2Jv76M=\");\n\n_c = Arrayusestate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arrayusestate\");","map":{"version":3,"names":["React","useState","Arrayusestate","biodata","id","name","age","myarrayData","setData","clearArray","map","data"],"sources":["C:/Users/deepd/Desktop/myproject/myproject/src/useeffectHooks/Arrayusestate.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Arrayusestate() {\r\n  const biodata = [\r\n    {\r\n      id: 0, name: '', age: '25'\r\n    },\r\n    {\r\n      id: 1, name: '', age: '30'\r\n    },\r\n    {\r\n      id: 2, name: '', age: '24'\r\n    }\r\n  ]\r\n  //console.log(biodata);\r\n  const [myarrayData, setData] = useState(biodata)\r\n\r\n\r\n  \r\n\r\n\r\n  const clearArray = () => {\r\n    setData([])\r\n  }\r\n  return (\r\n    <>\r\n      <h1>How to work with Array using UseState Hook in React</h1>\r\n\r\n      {/* {\r\n              biodata.map((data)=>\r\n                <h1 className='hi'>id {data.id} NAme:{data.name} and age:{data.age}</h1>)\r\n              \r\n          } */}\r\n   \r\n      {\r\n        myarrayData.map((data) => {\r\n          return <h1 className='hi' key={data.id}>age:{data.age} and  Name:{data.name} </h1>\r\n        })\r\n\r\n      }\r\n      <button className='btn' onClick={clearArray}>Clear Data</button>\r\n\r\n    </>\r\n  )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAe,SAASC,aAAT,GAAyB;EAAA;;EACtC,MAAMC,OAAO,GAAG,CACd;IACEC,EAAE,EAAE,CADN;IACSC,IAAI,EAAE,EADf;IACmBC,GAAG,EAAE;EADxB,CADc,EAId;IACEF,EAAE,EAAE,CADN;IACSC,IAAI,EAAE,EADf;IACmBC,GAAG,EAAE;EADxB,CAJc,EAOd;IACEF,EAAE,EAAE,CADN;IACSC,IAAI,EAAE,EADf;IACmBC,GAAG,EAAE;EADxB,CAPc,CAAhB,CADsC,CAYtC;;EACA,MAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBP,QAAQ,CAACE,OAAD,CAAvC;;EAMA,MAAMM,UAAU,GAAG,MAAM;IACvBD,OAAO,CAAC,EAAD,CAAP;EACD,CAFD;;EAGA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAUID,WAAW,CAACG,GAAZ,CAAiBC,IAAD,IAAU;MACxB,oBAAO;QAAI,SAAS,EAAC,IAAd;QAAA,mBAAsCA,IAAI,CAACL,GAA3C,iBAA2DK,IAAI,CAACN,IAAhE;MAAA,GAAwBM,IAAI,CAACP,EAA7B;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,CAVJ,eAeE;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEK,UAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA,gBADF;AAoBD;;GA1CuBP,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}